#!/bin/bash
# Aliases

alias black='f(){ python3 -m black --config libs/python/blackcfg.toml $DIVAL_PATH/tests/"$1"; unset -f f;}; f'

## Common Git Commands ##

# function to confirm operation
confirm_branch () {
    branch=$(gbc 2>&1)
    if [[ $? -ne 0 ]]; then
        return 1
    fi

    if [ -n "$ZSH_VERSION" ]; then
        read "?You are about to $1 $branch. Continue? (y/n) " confirm
    else
        read -p "You are about to $1 $branch. Continue? (y/n) " confirm 
    fi

    if [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]]; then
        return 0
    fi

    return 1
}

# Basics #
alias gb='git branch'
alias gs='git status'
alias gc='git clean -dxf'

# branch finding #
alias gbc='git branch --show-current'
alias gbg='f(){ git branch | grep -E "$@" ; unset -f f;}; f'

# conflicts #
alias gcl='git diff --name-only --diff-filter=U'
alias gdc='git diff --check'

# log #
alias gl='f(){ git log "$@" ; unset -f f;}; f'
alias glg='f(){ git log `gbg "$@"` ; unset -f f;}; f'

# branching #
alias gbn='f(){ git checkout -b "$@" ; unset -f f;}; f'
alias gbd='f(){ git branch -D "$@" ; unset -f f;}; f'
alias gbdg='f(){ gbd `gbg "$@"` ; unset -f f; }; f'

# fetching and checking out #
alias gfo='f(){ git fetch origin "$1":"$1" "$@" ; unset -f f;}; f'
alias gco='f(){ git checkout "$1" ; unset -f f;}; f'
alias gcog='f(){ gco `gbg "$@"` ; unset -f f; }; f'
alias gfco='f(){ gfo "$1" && gco "$1" ; unset -f f;}; f'

# rebasing #
alias gsq='f(){ git rebase -i HEAD~"$1" ; unset -f f;}; f'
alias grb='f(){ git rebase "$1" ; unset -f f;}; f'
alias grbo='f(){ grb origin/"$1" ; unset -f f;}; f'
alias grc='git rebase --continue'
alias gra='git rebase --abort'

# submodules #
alias gsm='git submodule update --init --recursive $SUBMODULES'
alias gsmf='git submodule update --init --recursive -f $SUBMODULES'

# committing #
alias gca='f(){ git commit --amend --reset-author "$@" ; unset -f f;}; f'
alias gcan='gca --no-edit'

# pushing #
alias gpf='$(confirm_branch "force-push to") && git push -f'
alias gpu='$(confirm_branch "push branch to origin") && git push -u origin `git branch --show-current`'
alias gpuf='$(confirm_branch "force push branch to origin") && git push -u origin `git branch --show-current` -f'

## Transferring builds from Dev machines ##
alias build_transfer='f(){ python -m build_transfer "$@" ; unset -f f;}; f'
