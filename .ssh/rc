#!/bin/bash

# references:
# http://techblog.appnexus.com/2011/managing-ssh-sockets-in-gnu-screen/
# https://gist.github.com/martijnvermaat/8070533
# http://stackoverflow.com/questions/21378569/how-to-auto-update-ssh-agent-environment-variables-when-attaching-to-existing-tm
# https://unix.stackexchange.com/questions/657250/how-to-distinguish-ssh-from-scp-in-ssh-rc

# if [ -n "$SSH_TTY" ]; then # only run for ssh, not scp
#     echo "asd" > /dev/null
# fi


if test "$SSH_AUTH_SOCK"; then
    export HOSTNAME=$(hostname)
    ln -sf "$SSH_AUTH_SOCK" "$HOME/.ssh/ssh_auth_sock.$HOSTNAME"

    # have to use sed here cause for some reason this rc file runs in sh rather than bash,
    # which doesn't accept string replacements
    # ln -sf $(echo "$SSH_AUTH_SOCK" | sed -e "s/\/tmp/\/hosttmp/") "$HOME/.ssh/ssh_auth_sock_rd.$HOSTNAME"
fi


# Don't break x11 Forwarding:
# Taken from the sshd(8) manpage.
if read proto cookie && [ -n "$DISPLAY" ]; then
    if [ `echo $DISPLAY | cut -c1-10` = 'localhost:' ]; then
        # X11UseLocalhost=yes
        echo add unix:`echo $DISPLAY |
            cut -c11-` $proto $cookie
    else
        # X11UseLocalhost=no
        echo add $DISPLAY $proto $cookie
    fi | xauth -q -
fi
